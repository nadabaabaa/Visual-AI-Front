{"ast":null,"code":"import { WebcamUtil } from 'ngx-webcam';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/theme.service\";\nimport * as i4 from \"@ngx-translate/core\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"ngx-webcam\";\nfunction testvisuel_webcam_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"webcam\", 17);\n    i0.ɵɵlistener(\"imageCapture\", function testvisuel_webcam_18_Template_webcam_imageCapture_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.handleImage($event));\n    })(\"cameraSwitched\", function testvisuel_webcam_18_Template_webcam_cameraSwitched_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.cameraWasSwitched($event));\n    })(\"initError\", function testvisuel_webcam_18_Template_webcam_initError_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.handleInitError($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"height\", 500)(\"width\", 500)(\"trigger\", ctx_r0.triggerObservable)(\"allowCameraSwitch\", ctx_r0.allowCameraSwitch)(\"switchCamera\", ctx_r0.nextWebcamObservable)(\"videoOptions\", ctx_r0.videoOptions)(\"imageQuality\", 1);\n  }\n}\nfunction testvisuel_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"img\", 19);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 3, \"SnapshotTitle\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", i0.ɵɵpipeBind1(5, 5, \"WebcamImageAltText\"));\n    i0.ɵɵproperty(\"src\", ctx_r1.webcamImage.imageAsDataUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"darkmode\": a0,\n    \"lightmode\": a1\n  };\n};\nexport let testvisuel = /*#__PURE__*/(() => {\n  class testvisuel {\n    constructor(title, meta, router, themeService, translate) {\n      this.title = title;\n      this.meta = meta;\n      this.router = router;\n      this.themeService = themeService;\n      this.translate = translate;\n      this.email = '';\n      this.password = '';\n      this.phonenumber = '';\n      this.emailPattern = '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$';\n      this.showWebcam = false;\n      this.allowCameraSwitch = true;\n      this.multipleWebcamsAvailable = false;\n      this.facingMode = 'environment';\n      this.messages = [];\n      // latest snapshot\n      this.webcamImage = null;\n      // webcam snapshot trigger\n      this.trigger = new Subject();\n      // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\n      this.nextWebcam = new Subject();\n      this.title.setTitle('sign-up - Soft UI Pro');\n      this.meta.addTags([{\n        property: 'og:title',\n        content: 'sign-up - Soft UI Pro'\n      }]);\n    }\n    ngOnInit() {\n      this.readAvailableVideoInputs();\n    }\n    triggerSnapshot() {\n      this.trigger.next();\n    }\n    toggleWebcam() {\n      this.showWebcam = !this.showWebcam;\n    }\n    handleInitError(error) {\n      this.messages.push(error);\n      if (error.mediaStreamError && error.mediaStreamError.name === 'NotAllowedError') {\n        this.addMessage('User denied camera access');\n      }\n    }\n    showNextWebcam(directionOrDeviceId) {\n      // true => move forward through devices\n      // false => move backwards through devices\n      // string => move to device with given deviceId\n      this.nextWebcam.next(directionOrDeviceId);\n    }\n    handleImage(webcamImage) {\n      this.addMessage('Received webcam image');\n      console.log(webcamImage);\n      this.webcamImage = webcamImage;\n    }\n    cameraWasSwitched(deviceId) {\n      this.addMessage('Active device: ' + deviceId);\n      this.deviceId = deviceId;\n      this.readAvailableVideoInputs();\n    }\n    addMessage(message) {\n      console.log(message);\n      this.messages.unshift(message);\n    }\n    get triggerObservable() {\n      return this.trigger.asObservable();\n    }\n    get nextWebcamObservable() {\n      return this.nextWebcam.asObservable();\n    }\n    get videoOptions() {\n      const result = {};\n      if (this.facingMode && this.facingMode !== '') {\n        result.facingMode = {\n          ideal: this.facingMode\n        };\n      }\n      return result;\n    }\n    readAvailableVideoInputs() {\n      WebcamUtil.getAvailableVideoInputs().then(mediaDevices => {\n        this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\n      });\n    }\n    toggleTheme() {\n      if (this.themeService.isDarkTheme()) {\n        this.themeService.enableLightMode();\n      } else {\n        this.themeService.enableDarkMode();\n      }\n    }\n    static #_ = this.ɵfac = function testvisuel_Factory(t) {\n      return new (t || testvisuel)(i0.ɵɵdirectiveInject(i1.Title), i0.ɵɵdirectiveInject(i1.Meta), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ThemeService), i0.ɵɵdirectiveInject(i4.TranslateService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: testvisuel,\n      selectors: [[\"testvisuel\"]],\n      decls: 36,\n      vars: 26,\n      consts: [[3, \"ngClass\"], [1, \"conversation-container\"], [\"routerLink\", \"/\", 1, \"conversation-log-out-button\", \"button\"], [1, \"ButtonSmall\", \"conversation-text01\"], [1, \"form-check\", \"form-switch\", \"ml-0\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"click\"], [1, \"form-check-label\", 3, \"click\"], [1, \"conversation-container1\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-2\", \"d-flex\", \"align-items-center\"], [3, \"height\", \"width\", \"trigger\", \"allowCameraSwitch\", \"switchCamera\", \"videoOptions\", \"imageQuality\", \"imageCapture\", \"cameraSwitched\", \"initError\", 4, \"ngIf\"], [3, \"click\"], [\"id\", \"cameraSwitchCheckbox\", \"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"cameraSwitchCheckbox\"], [\"id\", \"deviceId\", \"type\", \"text\", 2, \"width\", \"500px\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"snapshot\", 4, \"ngIf\"], [3, \"height\", \"width\", \"trigger\", \"allowCameraSwitch\", \"switchCamera\", \"videoOptions\", \"imageQuality\", \"imageCapture\", \"cameraSwitched\", \"initError\"], [1, \"snapshot\"], [3, \"src\", \"alt\"]],\n      template: function testvisuel_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"a\", 2)(3, \"span\")(4, \"span\", 3);\n          i0.ɵɵtext(5);\n          i0.ɵɵpipe(6, \"translate\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 5);\n          i0.ɵɵlistener(\"click\", function testvisuel_Template_input_click_8_listener() {\n            return ctx.toggleTheme();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function testvisuel_Template_button_click_9_listener() {\n            return ctx.toggleTheme();\n          });\n          i0.ɵɵtext(10);\n          i0.ɵɵpipe(11, \"translate\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(12, \"br\")(13, \"div\", 7);\n          i0.ɵɵelementStart(14, \"div\", 8)(15, \"div\", 9)(16, \"div\", 10)(17, \"div\");\n          i0.ɵɵtemplate(18, testvisuel_webcam_18_Template, 1, 7, \"webcam\", 11);\n          i0.ɵɵelement(19, \"br\");\n          i0.ɵɵelementStart(20, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function testvisuel_Template_button_click_20_listener() {\n            return ctx.triggerSnapshot();\n          });\n          i0.ɵɵtext(21);\n          i0.ɵɵpipe(22, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function testvisuel_Template_button_click_23_listener() {\n            return ctx.toggleWebcam();\n          });\n          i0.ɵɵtext(24);\n          i0.ɵɵpipe(25, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"br\");\n          i0.ɵɵelementStart(27, \"input\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function testvisuel_Template_input_ngModelChange_27_listener($event) {\n            return ctx.allowCameraSwitch = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"label\", 14);\n          i0.ɵɵtext(29);\n          i0.ɵɵpipe(30, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(31, \"br\");\n          i0.ɵɵtext(32);\n          i0.ɵɵpipe(33, \"translate\");\n          i0.ɵɵelementStart(34, \"input\", 15);\n          i0.ɵɵlistener(\"ngModelChange\", function testvisuel_Template_input_ngModelChange_34_listener($event) {\n            return ctx.deviceId = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(35, testvisuel_div_35_Template, 6, 7, \"div\", 16);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(23, _c0, ctx.themeService.isDarkTheme(), !ctx.themeService.isDarkTheme()));\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 11, \"LogOutButton\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(11, 13, \"LightDarkButton\"));\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.showWebcam);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(22, 15, \"TakeSnapshotButton\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(25, 17, \"ToggleWebcamButton\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.allowCameraSwitch);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(30, 19, \"AllowCameraSwitchLabel\"));\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(33, 21, \"DeviceIdLabel\"), \": \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.deviceId);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.webcamImage);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgIf, i2.RouterLink, i6.DefaultValueAccessor, i6.CheckboxControlValueAccessor, i6.NgControlStatus, i6.NgModel, i7.WebcamComponent, i4.TranslatePipe],\n      styles: [\"[_nghost-%COMP%]{display:contents}.darkmode[_ngcontent-%COMP%]{color:#fff}.lightmode[_ngcontent-%COMP%]{color:#000}\"]\n    });\n  }\n  return testvisuel;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}