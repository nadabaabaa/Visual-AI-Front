{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { WebcamUtil } from 'src/app/modules/webcam/util/webcam.util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"src/app/theme.service\";\nimport * as i4 from \"@ngx-translate/core\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"darkmode\": a0,\n    \"lightmode\": a1\n  };\n};\nexport let Conversation = /*#__PURE__*/(() => {\n  class Conversation {\n    constructor(title, meta, http, themeService, translate) {\n      this.title = title;\n      this.meta = meta;\n      this.http = http;\n      this.themeService = themeService;\n      this.translate = translate;\n      this.selectedFile = null;\n      // toggle webcam on/off\n      this.showWebcam = false;\n      this.allowCameraSwitch = true;\n      this.multipleWebcamsAvailable = false;\n      this.facingMode = 'environment';\n      this.messages = [];\n      // latest snapshot\n      this.webcamImage = null;\n      // webcam snapshot trigger\n      this.trigger = new Subject();\n      // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\n      this.nextWebcam = new Subject();\n      this.title.setTitle('conversation - Soft UI Pro');\n      this.meta.addTags([{\n        property: 'og:title',\n        content: 'conversation - Soft UI Pro'\n      }]);\n    }\n    toggleTheme() {\n      if (this.themeService.isDarkTheme()) {\n        this.themeService.enableLightMode();\n      } else {\n        this.themeService.enableDarkMode();\n      }\n    }\n    onFileSelected(event) {\n      this.selectedFile = event.target.files[0];\n    }\n    //Send the File to the Server\n    //We have the file, to send it to the server, we can use the Angular HttpClient.\n    //We can either send the file as a binary or as part of a FormData object - whatever your REST API endpoint supports/ expects\n    onUpload() {\n      this.http.post('my-backend.com/file-upload', this.selectedFile).subscribe();\n    }\n    ngOnInit() {\n      this.readAvailableVideoInputs();\n    }\n    triggerSnapshot() {\n      this.trigger.next();\n    }\n    toggleWebcam() {\n      this.showWebcam = !this.showWebcam;\n    }\n    handleInitError(error) {\n      this.messages.push(error);\n      if (error.mediaStreamError && error.mediaStreamError.name === 'NotAllowedError') {\n        this.addMessage('User denied camera access');\n      }\n    }\n    showNextWebcam(directionOrDeviceId) {\n      // true => move forward through devices\n      // false => move backwards through devices\n      // string => move to device with given deviceId\n      this.nextWebcam.next(directionOrDeviceId);\n    }\n    handleImage(webcamImage) {\n      this.addMessage('Received webcam image');\n      console.log(webcamImage);\n      this.webcamImage = webcamImage;\n    }\n    cameraWasSwitched(deviceId) {\n      this.addMessage('Active device: ' + deviceId);\n      this.deviceId = deviceId;\n      this.readAvailableVideoInputs();\n    }\n    addMessage(message) {\n      console.log(message);\n      this.messages.unshift(message);\n    }\n    get triggerObservable() {\n      return this.trigger.asObservable();\n    }\n    get nextWebcamObservable() {\n      return this.nextWebcam.asObservable();\n    }\n    get videoOptions() {\n      const result = {};\n      if (this.facingMode && this.facingMode !== '') {\n        result.facingMode = {\n          ideal: this.facingMode\n        };\n      }\n      return result;\n    }\n    readAvailableVideoInputs() {\n      WebcamUtil.getAvailableVideoInputs().then(mediaDevices => {\n        this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\n      });\n    }\n    static #_ = this.ɵfac = function Conversation_Factory(t) {\n      return new (t || Conversation)(i0.ɵɵdirectiveInject(i1.Title), i0.ɵɵdirectiveInject(i1.Meta), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.ThemeService), i0.ɵɵdirectiveInject(i4.TranslateService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: Conversation,\n      selectors: [[\"app-conversation\"]],\n      decls: 33,\n      vars: 4,\n      consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\", \"rel\", \"stylesheet\"], [1, \"container-fluid\", \"bg-light\"], [1, \"row\"], [1, \"col-12\"], [1, \"navbar\", \"navbar-expand-lg\", \"navbar-light\", \"bg-light\"], [\"rootClassName\", \"header-root-class-name3\"], [3, \"ngClass\"], [1, \"conversation-container\"], [\"routerLink\", \"/\", 1, \"conversation-log-out-button\", \"button\"], [1, \"ButtonSmall\", \"conversation-text01\"], [1, \"container\"], [1, \"col-md-6\", \"d-flex\", \"align-items-center\"], [1, \"conversation-text03\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"button \", 1, \"conversation-button2\", \"button\", 3, \"click\"], [\"routerLink\", \"/testvisuel\", 1, \"conversation-log-out-button\", \"button\"]],\n      template: function Conversation_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n          i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"link\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"body\")(6, \"div\", 4)(7, \"div\", 5)(8, \"div\", 6)(9, \"nav\", 7);\n          i0.ɵɵelement(10, \"app-header\", 8);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"a\", 11)(14, \"span\")(15, \"span\", 12);\n          i0.ɵɵtext(16, \"LOG OUT\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"br\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\", 13)(19, \"div\", 5)(20, \"div\", 14)(21, \"span\", 15);\n          i0.ɵɵtext(22, \"Conversations\\u00A0\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"div\");\n          i0.ɵɵelement(24, \"br\");\n          i0.ɵɵelementStart(25, \"input\", 16);\n          i0.ɵɵlistener(\"change\", function Conversation_Template_input_change_25_listener($event) {\n            return ctx.onFileSelected($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function Conversation_Template_button_click_26_listener() {\n            return ctx.onUpload();\n          });\n          i0.ɵɵtext(27, \" search \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"a\", 18)(29, \"span\")(30, \"span\", 12);\n          i0.ɵɵtext(31, \"start your visuel conversation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(32, \"br\");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(1, _c0, ctx.themeService.isDarkTheme(), !ctx.themeService.isDarkTheme()));\n        }\n      },\n      dependencies: [i5.NgClass, i6.RouterLink],\n      styles: [\"[_nghost-%COMP%]{display:contents}.conversation-container[_ngcontent-%COMP%]{width:100%;display:flex;overflow:auto;min-height:100vh;align-items:center;border-color:var(--dl-color-secondary-400);border-style:solid;border-width:1px;flex-direction:column;background-size:cover;background-image:url(/assets/photo2.jpg)}.conversation-log-out-button[_ngcontent-%COMP%]{color:var(--dl-color-pink-pink);outline:none;align-self:flex-end;background:8c52ff;box-shadow:#0000001c 0 4px 7px -1px,#00000012 0 2px 4px -1px;margin-top:20px;transition:all .15s ease-in;padding-top:var(--dl-space-space-triplequarterunit);border-width:0px;margin-right:30px;padding-left:var(--dl-space-space-unitandahalfunit);border-radius:1.875rem;padding-right:var(--dl-space-space-unitandahalfunit);padding-bottom:var(--dl-space-space-triplequarterunit);text-decoration:none}.conversation-log-out-button[_ngcontent-%COMP%]:hover, .conversation-text01[_ngcontent-%COMP%]:hover{cursor:pointer;transform:scale(1.02)}.conversation-container1[_ngcontent-%COMP%]{flex:0 0 auto;width:auto;height:990px;display:flex;align-items:flex-start;justify-content:center}.conversation-container2[_ngcontent-%COMP%]{width:403px;height:100%;display:flex;opacity:.8;align-self:flex-start;align-items:flex-start;flex-direction:column;background-color:var(--dl-color-pink-pink)}.conversation-sidebar[_ngcontent-%COMP%]{width:321px;height:829px;display:flex;padding:32px;align-items:center;margin-left:10px;border-color:var(--dl-color-blue-blue);border-style:solid;border-width:4px;margin-right:10px;flex-direction:column;justify-content:flex-start}.conversation-text03[_ngcontent-%COMP%]{color:var(--dl-color-secondary-700);width:auto;height:auto;align-self:center;font-family:Roboto;letter-spacing:5px;text-decoration:underline}.conversation-container3[_ngcontent-%COMP%]{width:327px;height:404px;display:flex;align-items:center;border-color:#78787866;border-style:hidden;border-width:2px;flex-direction:column;justify-content:flex-start}.conversation-button[_ngcontent-%COMP%]{width:244px;height:126px;align-self:center;margin-top:20px;text-align:center;font-family:Roboto}.conversation-button1[_ngcontent-%COMP%]{color:var(--dl-color-gray-white);margin-top:50px;text-transform:uppercase;background-color:var(--dl-color-primary-700)}.conversation-container4[_ngcontent-%COMP%]{flex:0 0 auto;width:749px;height:100%;display:flex;opacity:.5;position:relative;align-self:flex-end;align-items:flex-end;flex-direction:column;padding-bottom:19px}.conversation-thq-dropdown[_ngcontent-%COMP%]{cursor:pointer;display:inline-block;position:relative;border-radius:2px}.conversation-dropdown-list[_ngcontent-%COMP%]{left:0%;width:max-content;display:none;z-index:100;position:absolute;min-width:100%;transition:.3s;align-items:stretch;border-color:#d9d9d9;border-width:1px;border-radius:4px;flex-direction:column;list-style-type:none;background-color:var(--dl-color-gray-white);list-style-position:inside}.conversation-dropdown[_ngcontent-%COMP%]{cursor:pointer;display:inline-block;position:relative;border-radius:2px}.conversation-dropdown-toggle[_ngcontent-%COMP%]{fill:#595959;color:#595959;width:100%;display:inline-flex;transition:.3s;align-items:center;padding-top:var(--dl-space-space-halfunit);padding-left:var(--dl-space-space-unit);border-radius:4px;padding-right:var(--dl-space-space-unit);padding-bottom:var(--dl-space-space-halfunit)}.conversation-dropdown-toggle[_ngcontent-%COMP%]:hover{fill:#fff;color:#fff;background-color:#595959}.conversation-text04[_ngcontent-%COMP%]{width:100%;cursor:pointer;display:flex;font-size:14px;font-style:normal;font-weight:500}.conversation-dropdown1[_ngcontent-%COMP%]{cursor:pointer;display:inline-block;position:relative;border-radius:2px}.conversation-dropdown-toggle1[_ngcontent-%COMP%]{fill:#595959;color:#595959;width:100%;display:inline-flex;transition:.3s;align-items:center;padding-top:var(--dl-space-space-halfunit);padding-left:var(--dl-space-space-unit);border-radius:4px;padding-right:var(--dl-space-space-unit);padding-bottom:var(--dl-space-space-halfunit)}.conversation-dropdown-toggle1[_ngcontent-%COMP%]:hover{fill:#fff;color:#fff;background-color:#595959}.conversation-text05[_ngcontent-%COMP%]{width:100%;cursor:pointer;display:flex;font-size:14px;font-style:normal;font-weight:500}.conversation-dropdown2[_ngcontent-%COMP%]{cursor:pointer;display:inline-block;position:relative;border-radius:2px}.conversation-dropdown-toggle2[_ngcontent-%COMP%]{fill:#595959;color:#595959;width:100%;display:inline-flex;transition:.3s;align-items:center;padding-top:var(--dl-space-space-halfunit);padding-left:var(--dl-space-space-unit);border-radius:4px;padding-right:var(--dl-space-space-unit);padding-bottom:var(--dl-space-space-halfunit)}.conversation-dropdown-toggle2[_ngcontent-%COMP%]:hover{fill:#fff;color:#fff;background-color:#595959}.conversation-text06[_ngcontent-%COMP%]{width:100%;cursor:pointer;display:flex;font-size:14px;font-style:normal;font-weight:500}.conversation-text07[_ngcontent-%COMP%]{color:var(--dl-color-gray-white);align-self:center;margin-top:200px;margin-left:100px}.conversation-text08[_ngcontent-%COMP%], .conversation-text09[_ngcontent-%COMP%], .conversation-text10[_ngcontent-%COMP%]{font-style:italic;font-weight:700}.conversation-button2[_ngcontent-%COMP%]{width:326px;height:94px;display:flex;align-self:center;padding-top:22px;padding-left:186px;flex-direction:row;padding-bottom:4px}.conversation-icon[_ngcontent-%COMP%]{width:24px;align-self:stretch;margin:20px 80px 0}.conversation-icon2[_ngcontent-%COMP%]{width:24px;height:24px;margin-top:180px;margin-right:285px}@media (max-width: 767px){.conversation-sidebar[_ngcontent-%COMP%]{height:70vh}}\", \"body[_ngcontent-%COMP%] {\\n            background-image: url('/assets/photo2.jpg');\\n            background-repeat: no-repeat;\\n            background-attachment: fixed;\\n        }\"]\n    });\n  }\n  return Conversation;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}